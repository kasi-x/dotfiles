[alias]
    c = commit
    ci = commit -a
    cam = commit -a --amend
    co = checkout
    cb = checkout -b
    ct = checkout --track
    cm = checkout master
    cd = checkout develop
    l = log --pretty=format:\"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]\" --decorate
    g = log --oneline --decorate --graph
    s = status -sb
    co = checkout
    b = branch -avv
    last = log -1 HEAD
    la  = log --pretty=\"format:%ad %h (%an): %s\" --date=short
    lr  = log origin
    ll =  log --decorate --numstat --pretty=format:\"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]\" 
    ll1 = log --date=short --max-count=1  --pretty=format:'%Cgreen%h %cd %Cblue%cn%x09%Creset%s'
    lll = log --date=short --max-count=10 --pretty=format:'%Cgreen%h %cd %Cblue%cn%x09%Creset%s'
    lds = log --pretty=format:\"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]\" --decorate --date=short
    ld = log --pretty=format:\"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]\" --decorate --date=relative
    ranking = shortlog -s -n --no-merges
    lc = log master..
    filelog = log -u
    fl = log -u
    dl = !git ll -1
    cp = cherry-pick
    st = status
    cl = clone
    br = branch
    pur = pull --rebase
    la = !git config -l | grep alias | cut -c 7-
    diffs = !git diff | neovide
    di = diff
    dm = diff master
    dw = diff --color-words
    dc = diff --cached
    ds = diff --staged
    d1 = diff HEAD~
    d2 = diff HEAD~~
    d3 = diff HEAD~~~
    d4 = diff HEAD~~~~
    d5 = diff HEAD~~~~~
    br  = branch
    ba  = branch -a
    bm  = branch --merged
    bn  = branch --no-merged
    bo  = branch -r
	branchdiff = log --graph --left-right --cherry-pick --oneline
	sps = !git stash -u && git pull --rebase && git stash apply
	apc = !git add -A && git commit && git pull --rebase && git push
	ada = add --all :/
	pr = !f() { git fetch origin refs/pull/$1/head:pr/$1; git checkout pr/$1; } ; f
	cleanb = !git remote update -p; git branch --merged | grep -v "\*" | xargs -n 1 git branch -d
	squash = "!f(){ git reset --soft HEAD~$(git rev-list --count master...) && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
    r    = reset HEAD
    r1   = reset HEAD~
    r2   = reset HEAD~~
    r3   = reset HEAD~~~
    r4   = reset HEAD~~~~
    r5   = reset HEAD~~~~~
    rsh  = reset --soft HEAD
    rsh1 = reset --soft HEAD~
    rsh2 = reset --soft HEAD~~
    rsh3 = reset --soft HEAD~~~
    rsh4 = reset --soft HEAD~~~~
    rsh5 = reset --soft HEAD~~~~~
    rhh  = reset --hard HEAD
    rhh1 = reset --hard HEAD~
    rhh2 = reset --hard HEAD~~
    rhh3 = reset --hard HEAD~~~
    rhh4 = reset --hard HEAD~~~~
    rhh5 = reset --hard HEAD~~~~~
[rerere]
	enabled = true
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = true
    pager = true
[color "status"]
    added = green
    changed = blue
    untracked = magenta
    deleted = red
[format]
    pretty = "Commit:  %C(yellow)%H%nAuthor:  %C(green)%aN <%aE>%nDate:    (%C(red)%ar%Creset) %ai%nSubject: %s%n%n%b"
	name = kasi-x
[user]
	name = kashi-x
	email = kashimiya.exe@gmail.com
[core]
	editor = neovide
	excludesfile = ~/.gitignore
    pager = delta
[interactive]
    diffFilter = delta --color-only
[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
[merge]
    conflictstyle = diff3
[diff]
    colorMoved = default
[push]
    default = simple
[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true
    process = git-lfs filter-process
[ghq]
    root = ~/ghq
