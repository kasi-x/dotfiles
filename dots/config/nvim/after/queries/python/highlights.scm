;; extends

; (("def" @keyword.function) (#set! conceal "f"))
; (("while" @repeat) (#set! conceal "W"))
; (("assert" @keyword) (#set! conceal "?"))
; (("continue" @keyword) (#set! conceal "C"))
(("and" @keyword.operator) (#set! conceal "∧"))
; ((call function: (identifier) @function.builtin (#eq? @function.builtin "print")) (#set! conceal "p"))
; (("yield" @keyword) (#set! conceal "Y"))
; (("else" @conditional) (#set! conceal "e"))
; (("pass" @keyword) (#set! conceal "P"))
; (("global" @keyword) (#set! conceal "G"))
; (("break" @keyword) (#set! conceal "B"))
; (("class" @keyword) (#set! conceal "c"))
; (("with" @keyword) (#set! conceal "w"))
; (("del" @keyword) (#set! conceal "D"))
; (("if" @conditional) (#set! conceal "?"))
; (("for" @repeat) (#set! conceal "F"))
(("or" @keyword.operator) (#set! conceal "∨"))
; (("import" @include) (#set! conceal "i"))
(("not" @keyword.operator) (#set! conceal "¬"))
; ((yield ("from") @keyword) (#set! conceal "F"))
; ((import_from_statement ("from") @include) (#set! conceal "f"))
; (("return" @keyword) (#set! conceal "R"))
(("lambda" @keyword) (#set! conceal "󰘧"))
; (("elif" @conditional) (#set! conceal "e"))